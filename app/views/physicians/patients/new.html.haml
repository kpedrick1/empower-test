.row{:style => "background-color:#f5f4f2;margin:0 0 0 0;"}
  .col-xs-12{:style => "background-color: rgba(194, 43, 36, 0.6);margin:0 15 0 15;"}
    .col-xs-12.col-sm-3{:style => "padding: 0 0 0 0;"}
      #page_title{:style => "background-color: #c22b24;"}
        %h5{:style => "color:white; line-height: 45px;margin:0 0 0 0;"} New Patient
    .col-sm-9.hidden-xs

  = render 'layouts/messages'

  .panel.panel-default{:style => "margin-bottom:0;"}
    .panel-body



      = form_tag({action: "create"}) do

        .row
          .col-xs-12

            = hidden_field_tag "patient[Physician__c]", @physician[:Id]

        .row
          .col-xs-12.col-md-6
            .panel.panel-default
              .panel-heading
                %h4.panel-title
                  Personal Information

              .panel-body
                .form-group
                  = label_tag "First Name", nil, class: "control-label"
                  = text_field_tag "patient[FirstName]", nil, class: "form-control mandatory", required: "true", autocomplete: "off"

                .form-group
                  = label_tag "Last Name", nil, class: "control-label"
                  = text_field_tag "patient[LastName]", nil, class: "form-control mandatory", required: "true", autocomplete: "off"

                .form-group
                  = label_tag "Email", nil, class: "control-label"
                  %a{href: "#", style: "display:none"}
                    %span.label.label-danger.message

                  = email_field_tag "patient[PersonEmail]", nil, class: "form-control email", required: "true", autocomplete: "off"

                .form-group
                  = label_tag "Mobile Phone", nil, class: "control-label"
                  = phone_field_tag "patient[PersonMobilePhone]", nil, class: "form-control phone mandatory", min: 10, max:10, required: "true", autocomplete: "off"

                .form-group
                  = label_tag "Home Phone", nil, class: "control-label"
                  = phone_field_tag "patient[PersonHomePhone]", nil, class: "form-control phone mandatory", min: 10, max:10, required: "true", autocomplete: "off"

                .form-group
                  = label_tag "Contact Method", nil, class: "control-label"
                  = select_tag "patient[Patient_Contact_Method__c]", options_for_select(["Telephone", "Email", "Text"], "Email"), class: "form-control"

                .form-group
                  = label_tag "Birthdate", nil, class: "control-label"
                  .row
                    .col-xs-12.col-md-4{style: "margin-top: 1px"}
                      = select_tag "patient[Patient_Birthday_Year__c]", options_for_select((Date.today.year.downto(1900).to_a), 1950), class: "form-control"
                    .col-xs-12.col-md-5{style: "margin-top: 1px"}
                      = select_tag "patient[Patient_Birthday_Month__c]", options_for_select(@months, "January"), class: "form-control"
                    .col-xs-12.col-md-3{style: "margin-top: 1px"}
                      = select_tag "patient[Patient_Birthday_Day__c]", options_for_select(@days, "01"), class: "form-control"

                .form-group
                  = label_tag "Gender", nil, class: "control-label", style: "display: block"
                  .radio-inline
                    %label
                      %input{type: "radio", name: "patient[Gender__c]", value: "Male", checked: "true"}
                      Male
                  .radio-inline
                    %label
                      %input{type: "radio", name: "patient[Gender__c]", value: "Female"}
                      Female

          .col-xs-12.col-md-6
            .panel.panel-default
              .panel-heading
                %h4.panel-title
                  Address

              .panel-body
                .form-group
                  = label_tag "Street", nil, class: "control-label"
                  = text_field_tag "patient[BillingStreet]", nil, class: "form-control", autocomplete: "off"

                .form-group
                  = label_tag "City", nil, class: "control-label"
                  = text_field_tag "patient[BillingCity]", nil, class: "form-control", autocomplete: "off"

                .form-group
                  = label_tag "State", nil, class: "control-label"
                  /= text_field_tag "patient[BillingState]", nil, class: "form-control", autocomplete: "off"
                  = select_tag "patient[BillingState]", options_for_select(get_states_us), class: "form-control", autocomplete: "off"

                .form-group
                  = label_tag "Zip Code", nil, class: "control-label"
                  = text_field_tag "patient[BillingPostalCode]", nil, class: "form-control", autocomplete: "off"

                .form-group
                  = label_tag "Country", nil, class: "control-label"
                  = select_tag "patient[BillingCountry]", "<option>US</option>".html_safe, class: "form-control"


                = submit_tag "Save and Prescribe", class: "btn btn-primary btn-block new_button"

      
:javascript

  var patientNumber = 0

  $(function(){ 
    
    $(".phone").focusout(function() {
    
        text = $(this).val()
        text = text.replace(/[^0-9]/g, "")
        text = text.substring(0,10)
 
        if (text.length == 10) {
          text = text.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3")
          $(this).val(text)
        }
        else if (text.length > 0) {
          $(this).parent().addClass("has-error")
        }
        else {
          $(this).parent().removeClass("has-error")
        }
    
    });
    
    
    $("#patient_PersonEmail").focusout(function(){
    
      email = $(this).val()
      emails = $.parseJSON('#{@emails}')
      flag = false
      
      for (x in emails) {
        if (emails[x] == email) {
           flag = true
           patientNumber = x
           break
        }
      }
      
      
      if (!flag) {
      
        $(".message").parent().hide()
        validateEmail(this)      
        
      }
      else {
         $(this).parent().addClass("has-error")
         $(this).parent().removeClass("has-success")
         message = $(this).parent().find(".message")
         $(message).text("This email is taken. Prescribe this Patient")
         $(message).parent().show()
      }
    });
    
    $(".message").click(function(){
    
      window.location = "/physicians/prescriptions/new?id=" + patientNumber
      
    });
    
    function validateEmail(that) { 
      email = $(that).val()
      
      if (email != "") {
      
        var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
              
        if (regex.test(email)) {
          $(that).parent().removeClass("has-error")
          $(that).parent().addClass("has-success")      
        }
        else {
          $(that).parent().addClass("has-error")
          $(that).parent().removeClass("has-success")        
        }
      }
      else {
        $(that).parent().addClass("has-error")
        $(that).parent().removeClass("has-success")      
      }
    }
    
    
  });        
  
:javascript

  $(function(){
  
    $("#patient").addClass("active");
    $("#patient-mobile").addClass("active");
  
  })  
  
  
:javascript

  $(function(){
  
    $(".mandatory").focusout(function(){
    
      if ($(this).val() == "") {
        $(this).parent().addClass("has-error")
        $(this).parent().removeClass("has-success")
      }
      else {
        $(this).parent().removeClass("has-error")
        $(this).parent().addClass("has-success")
      }
    })
    
  })    
              
                                    