.row{:style => "background-color:#f5f4f2;margin:0 0 0 0;"}
  = render 'layouts/messages'

  .panel.panel-default{:style => "margin-bottom:0;"}
    .panel-body

      .row
        .col-xs-12
          - @price_book.each do |prod|

            .row
              .panel.panel-default
                .panel-body
                  .col-xs-4
                    %img{:src => "#{prod.productUrl}", :height => "400", :width => "320"}
                  .col-xs-8
                    .col-xs-12
                      %h2
                        = raw prod.productName
                    .col-xs-12
                      = raw prod.productDescription
                    .col-xs-12{:style => "margin-bottom:20px;margin-top:20px"}
                      .unit_price_cell
                        = number_to_currency(prod.productPrice)
                    .col-xs-8
             
                    .col-xs-4{:style => "text-align:right;margin-bottom:20px;margin-top:20px;color:white;"}
                      = button_to 'Add to Cart', {:controller => "products", :action => "add_to_cart"}, :method => :post,:class => 'btn', :style => "background-color:#ffc81f; font-size: 2em; font-weight: bold;", :params => {:product_id => prod.productId, :product_name => prod.productName}
                  .col-xs-12
                    .col-xs-6
                      = raw prod.benefits
                    .col-xs-6
                      = raw prod.keyactivities
                  .col-xs-12
                    %img{:src => "/assets/CCbar.png", :width => "100%"}
                  .col-xs-12
                    .col-xs-4
                      = raw prod.productspecifications
                    .col-xs-4
                      = raw prod.dosingdirections
                    .col-xs-4
                      = raw prod.supports
                  .col-xs-4
                    = raw prod.relatedreading

                      
  .panel.panel-default{:style => "margin-bottom:0;"}
    .panel-body
                                    
      .row
        .col-xs-12{:style => "text-align:center;font-size:3em;color:red"}
          Special Offer for Qualifying Couples
      .row
        .panel.panel-default
          .panel-body
            .col-xs-4{:style => "margin-top:20px"}
              %img{:src => "/assets/couple.png", :height => "400", :width => "320"}
            .col-xs-8
              .col-xs-12
                %h2
                  Glutrasol-FE - Fertility Enhancement (30 day supply per couple) - Study Participant Special
              .col-xs-12{:style => "font-size:14px"}
                For a limited time, CortControl is offering free product to 50 U.S.-based couples who meet our study requirements as part of a 90-day observational study. Monthly wellness reporting required to receive product throughout with additional screening prior to acceptance.
              .col-xs-12{:style => "font-size:14px;font-weight:bold"}
                %br
                  $140 discount - qualified couples only pay shipping and handling ($10/monthly shipment)
                  %br
              .col-xs-7{:style => "font-size:14px"}
                Complete the Enrollment process and we will contact you with your eligibility
              .col-xs-5{:style => "text-align:right;margin-bottom:20px;margin-top:20px;color:white;"}
                = link_to "Enroll Now", "https://cortcontrolenrollment.sympltech.com/", :id => "Enroll", :class => 'btn', :style => "background-color:#ffc81f; color:white; font-size:2em; font-weight:bold;"
                  
                      
:javascript

  $(".product_qty_input").on("input",null,null,function(){

    calculateQuantityTotal($(this));
  });


  function calculateQuantityTotal(thisobj) {

    var productGrandTotal = 0;

    $(".product_qty_input").each(function(){

        var productQuantity =  this.value;

        var productCurrency = $(this).closest("tr").find(".unit_price_cell").text();
        var productPrice = Number(productCurrency.replace(/[^0-9\.]+/g,""));

        var totalPrice = (productPrice * productQuantity);

        productGrandTotal = productGrandTotal + totalPrice;

        console.log(productQuantity);
        console.log(productCurrency);
        console.log(productPrice);
        console.log(totalPrice);
        console.log(productGrandTotal);


        var totalPriceCurrency = "$".concat(totalPrice.toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));

        $(this).closest("tr").find(".total_price_cell").html(totalPriceCurrency);

      });

      var grandTotalCurrency = "$".concat(productGrandTotal.toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));
      thisobj.closest("table").find(".grand_total_cell").html(grandTotalCurrency);
  }

  $(function(){
    $(".product_qty_input").each(function(){
      calculateQuantityTotal($(this));
    });
  });